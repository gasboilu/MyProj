nodejs 그룹채팅형태로 새로 서버구축
- 몽고DB사용
1. 컬렉션 생성
db.createCollection("management_roominfo", {capped:true, size:6000000, max:10000});
db.createCollection("management_msginfo", {capped:true, size:10000000, max:10000});
- 컬렉션 조회 리스트
show collections
- 컬렉션 제거
db.컬렉션명.drop()
- 컬렉션명 변경
db.OLD컬렉션명.renameCollection("NEW컬렉션명") : 이름변경

2. 컬렉션내에 document정보값을 생성한다. 이때 형식은 정해져있지 않음
   db.컬렉션명.insert(document)
   ex> db.management_roominfo.insert([
		 {
			"room_id" : "채팅방 ID", -> 형식 필요
			"room_name" : "채팅방 이름", -> 채팅방에 등록되는 사용자이름들을 최초기준으로, 나중에 변경가능하도록 관리해줌
			"room_status" : "방상태 (1: 정상, 0:사용자가없어 채널 종료된상태[과거이력 -> batch를 통한 다른곳으로 정보값을 보내는것이 좋음])"
			"from_id" : "보낸사람 ID",
			"from_name" : "보낸사람 이름",
			"node_id" : "노드 서버 아이디 => 채팅서버를 여러대로 돌려서 사용할수있도록 하는기능을 사용함 (node forever)",
			"create_date" : "채팅방 생성시간",
			"upd_date" : "마지막으로 채팅방이 업데이트된 시간",
			"member" : [{"id":"","name":"","room_status" : "0 or 1", "room_add_date" : "초대시간", "room_enter_date" : "입장시간", "room_out_date" : "나간시간"}]
		 }
	   ]);
	   db.management_msginfo.insert([
		  {
			"room_id" : "채팅방 ID", -> 형식 필요
			"message" : "채팅방 이름",
			"message_view" : "메시지 확인수",
			"message_type" : "메시지 종류", -> (텍스트,파일,링크)
			"message_date" : "메시지 보낸시각",
			"member" : [{"id":"","name":"","view" : "0 or 1 확인 여부"}]
		  }
	   ]);